/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.mycompany.commonskhassida.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class KhassidaEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8143849080121157875L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"KhassidaEvent\",\"namespace\":\"com.mycompany.commonskhassida.avro\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"titre\",\"type\":\"string\"},{\"name\":\"teunk\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"periodeEcriture\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"auteur\",\"type\":\"string\"},{\"name\":\"nombreBayite\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"nombreBaate\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"nombreAraf\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"categorie\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<KhassidaEvent> ENCODER =
      new BinaryMessageEncoder<KhassidaEvent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<KhassidaEvent> DECODER =
      new BinaryMessageDecoder<KhassidaEvent>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<KhassidaEvent> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<KhassidaEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<KhassidaEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<KhassidaEvent>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this KhassidaEvent to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a KhassidaEvent from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a KhassidaEvent instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static KhassidaEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence id;
   private java.lang.CharSequence titre;
   private java.lang.CharSequence teunk;
   private java.lang.CharSequence description;
   private java.lang.CharSequence periodeEcriture;
   private java.lang.CharSequence auteur;
   private java.lang.CharSequence nombreBayite;
   private java.lang.CharSequence nombreBaate;
   private java.lang.CharSequence nombreAraf;
   private java.lang.CharSequence categorie;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public KhassidaEvent() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param titre The new value for titre
   * @param teunk The new value for teunk
   * @param description The new value for description
   * @param periodeEcriture The new value for periodeEcriture
   * @param auteur The new value for auteur
   * @param nombreBayite The new value for nombreBayite
   * @param nombreBaate The new value for nombreBaate
   * @param nombreAraf The new value for nombreAraf
   * @param categorie The new value for categorie
   */
  public KhassidaEvent(java.lang.CharSequence id, java.lang.CharSequence titre, java.lang.CharSequence teunk, java.lang.CharSequence description, java.lang.CharSequence periodeEcriture, java.lang.CharSequence auteur, java.lang.CharSequence nombreBayite, java.lang.CharSequence nombreBaate, java.lang.CharSequence nombreAraf, java.lang.CharSequence categorie) {
    this.id = id;
    this.titre = titre;
    this.teunk = teunk;
    this.description = description;
    this.periodeEcriture = periodeEcriture;
    this.auteur = auteur;
    this.nombreBayite = nombreBayite;
    this.nombreBaate = nombreBaate;
    this.nombreAraf = nombreAraf;
    this.categorie = categorie;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return titre;
    case 2: return teunk;
    case 3: return description;
    case 4: return periodeEcriture;
    case 5: return auteur;
    case 6: return nombreBayite;
    case 7: return nombreBaate;
    case 8: return nombreAraf;
    case 9: return categorie;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: titre = (java.lang.CharSequence)value$; break;
    case 2: teunk = (java.lang.CharSequence)value$; break;
    case 3: description = (java.lang.CharSequence)value$; break;
    case 4: periodeEcriture = (java.lang.CharSequence)value$; break;
    case 5: auteur = (java.lang.CharSequence)value$; break;
    case 6: nombreBayite = (java.lang.CharSequence)value$; break;
    case 7: nombreBaate = (java.lang.CharSequence)value$; break;
    case 8: nombreAraf = (java.lang.CharSequence)value$; break;
    case 9: categorie = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'titre' field.
   * @return The value of the 'titre' field.
   */
  public java.lang.CharSequence getTitre() {
    return titre;
  }


  /**
   * Sets the value of the 'titre' field.
   * @param value the value to set.
   */
  public void setTitre(java.lang.CharSequence value) {
    this.titre = value;
  }

  /**
   * Gets the value of the 'teunk' field.
   * @return The value of the 'teunk' field.
   */
  public java.lang.CharSequence getTeunk() {
    return teunk;
  }


  /**
   * Sets the value of the 'teunk' field.
   * @param value the value to set.
   */
  public void setTeunk(java.lang.CharSequence value) {
    this.teunk = value;
  }

  /**
   * Gets the value of the 'description' field.
   * @return The value of the 'description' field.
   */
  public java.lang.CharSequence getDescription() {
    return description;
  }


  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'periodeEcriture' field.
   * @return The value of the 'periodeEcriture' field.
   */
  public java.lang.CharSequence getPeriodeEcriture() {
    return periodeEcriture;
  }


  /**
   * Sets the value of the 'periodeEcriture' field.
   * @param value the value to set.
   */
  public void setPeriodeEcriture(java.lang.CharSequence value) {
    this.periodeEcriture = value;
  }

  /**
   * Gets the value of the 'auteur' field.
   * @return The value of the 'auteur' field.
   */
  public java.lang.CharSequence getAuteur() {
    return auteur;
  }


  /**
   * Sets the value of the 'auteur' field.
   * @param value the value to set.
   */
  public void setAuteur(java.lang.CharSequence value) {
    this.auteur = value;
  }

  /**
   * Gets the value of the 'nombreBayite' field.
   * @return The value of the 'nombreBayite' field.
   */
  public java.lang.CharSequence getNombreBayite() {
    return nombreBayite;
  }


  /**
   * Sets the value of the 'nombreBayite' field.
   * @param value the value to set.
   */
  public void setNombreBayite(java.lang.CharSequence value) {
    this.nombreBayite = value;
  }

  /**
   * Gets the value of the 'nombreBaate' field.
   * @return The value of the 'nombreBaate' field.
   */
  public java.lang.CharSequence getNombreBaate() {
    return nombreBaate;
  }


  /**
   * Sets the value of the 'nombreBaate' field.
   * @param value the value to set.
   */
  public void setNombreBaate(java.lang.CharSequence value) {
    this.nombreBaate = value;
  }

  /**
   * Gets the value of the 'nombreAraf' field.
   * @return The value of the 'nombreAraf' field.
   */
  public java.lang.CharSequence getNombreAraf() {
    return nombreAraf;
  }


  /**
   * Sets the value of the 'nombreAraf' field.
   * @param value the value to set.
   */
  public void setNombreAraf(java.lang.CharSequence value) {
    this.nombreAraf = value;
  }

  /**
   * Gets the value of the 'categorie' field.
   * @return The value of the 'categorie' field.
   */
  public java.lang.CharSequence getCategorie() {
    return categorie;
  }


  /**
   * Sets the value of the 'categorie' field.
   * @param value the value to set.
   */
  public void setCategorie(java.lang.CharSequence value) {
    this.categorie = value;
  }

  /**
   * Creates a new KhassidaEvent RecordBuilder.
   * @return A new KhassidaEvent RecordBuilder
   */
  public static com.mycompany.commonskhassida.avro.KhassidaEvent.Builder newBuilder() {
    return new com.mycompany.commonskhassida.avro.KhassidaEvent.Builder();
  }

  /**
   * Creates a new KhassidaEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new KhassidaEvent RecordBuilder
   */
  public static com.mycompany.commonskhassida.avro.KhassidaEvent.Builder newBuilder(com.mycompany.commonskhassida.avro.KhassidaEvent.Builder other) {
    if (other == null) {
      return new com.mycompany.commonskhassida.avro.KhassidaEvent.Builder();
    } else {
      return new com.mycompany.commonskhassida.avro.KhassidaEvent.Builder(other);
    }
  }

  /**
   * Creates a new KhassidaEvent RecordBuilder by copying an existing KhassidaEvent instance.
   * @param other The existing instance to copy.
   * @return A new KhassidaEvent RecordBuilder
   */
  public static com.mycompany.commonskhassida.avro.KhassidaEvent.Builder newBuilder(com.mycompany.commonskhassida.avro.KhassidaEvent other) {
    if (other == null) {
      return new com.mycompany.commonskhassida.avro.KhassidaEvent.Builder();
    } else {
      return new com.mycompany.commonskhassida.avro.KhassidaEvent.Builder(other);
    }
  }

  /**
   * RecordBuilder for KhassidaEvent instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<KhassidaEvent>
    implements org.apache.avro.data.RecordBuilder<KhassidaEvent> {

    private java.lang.CharSequence id;
    private java.lang.CharSequence titre;
    private java.lang.CharSequence teunk;
    private java.lang.CharSequence description;
    private java.lang.CharSequence periodeEcriture;
    private java.lang.CharSequence auteur;
    private java.lang.CharSequence nombreBayite;
    private java.lang.CharSequence nombreBaate;
    private java.lang.CharSequence nombreAraf;
    private java.lang.CharSequence categorie;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.mycompany.commonskhassida.avro.KhassidaEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.titre)) {
        this.titre = data().deepCopy(fields()[1].schema(), other.titre);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.teunk)) {
        this.teunk = data().deepCopy(fields()[2].schema(), other.teunk);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.description)) {
        this.description = data().deepCopy(fields()[3].schema(), other.description);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.periodeEcriture)) {
        this.periodeEcriture = data().deepCopy(fields()[4].schema(), other.periodeEcriture);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.auteur)) {
        this.auteur = data().deepCopy(fields()[5].schema(), other.auteur);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.nombreBayite)) {
        this.nombreBayite = data().deepCopy(fields()[6].schema(), other.nombreBayite);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.nombreBaate)) {
        this.nombreBaate = data().deepCopy(fields()[7].schema(), other.nombreBaate);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.nombreAraf)) {
        this.nombreAraf = data().deepCopy(fields()[8].schema(), other.nombreAraf);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.categorie)) {
        this.categorie = data().deepCopy(fields()[9].schema(), other.categorie);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
    }

    /**
     * Creates a Builder by copying an existing KhassidaEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(com.mycompany.commonskhassida.avro.KhassidaEvent other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.titre)) {
        this.titre = data().deepCopy(fields()[1].schema(), other.titre);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.teunk)) {
        this.teunk = data().deepCopy(fields()[2].schema(), other.teunk);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.description)) {
        this.description = data().deepCopy(fields()[3].schema(), other.description);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.periodeEcriture)) {
        this.periodeEcriture = data().deepCopy(fields()[4].schema(), other.periodeEcriture);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.auteur)) {
        this.auteur = data().deepCopy(fields()[5].schema(), other.auteur);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.nombreBayite)) {
        this.nombreBayite = data().deepCopy(fields()[6].schema(), other.nombreBayite);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.nombreBaate)) {
        this.nombreBaate = data().deepCopy(fields()[7].schema(), other.nombreBaate);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.nombreAraf)) {
        this.nombreAraf = data().deepCopy(fields()[8].schema(), other.nombreAraf);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.categorie)) {
        this.categorie = data().deepCopy(fields()[9].schema(), other.categorie);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.mycompany.commonskhassida.avro.KhassidaEvent.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.mycompany.commonskhassida.avro.KhassidaEvent.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'titre' field.
      * @return The value.
      */
    public java.lang.CharSequence getTitre() {
      return titre;
    }


    /**
      * Sets the value of the 'titre' field.
      * @param value The value of 'titre'.
      * @return This builder.
      */
    public com.mycompany.commonskhassida.avro.KhassidaEvent.Builder setTitre(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.titre = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'titre' field has been set.
      * @return True if the 'titre' field has been set, false otherwise.
      */
    public boolean hasTitre() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'titre' field.
      * @return This builder.
      */
    public com.mycompany.commonskhassida.avro.KhassidaEvent.Builder clearTitre() {
      titre = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'teunk' field.
      * @return The value.
      */
    public java.lang.CharSequence getTeunk() {
      return teunk;
    }


    /**
      * Sets the value of the 'teunk' field.
      * @param value The value of 'teunk'.
      * @return This builder.
      */
    public com.mycompany.commonskhassida.avro.KhassidaEvent.Builder setTeunk(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.teunk = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'teunk' field has been set.
      * @return True if the 'teunk' field has been set, false otherwise.
      */
    public boolean hasTeunk() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'teunk' field.
      * @return This builder.
      */
    public com.mycompany.commonskhassida.avro.KhassidaEvent.Builder clearTeunk() {
      teunk = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * @return The value.
      */
    public java.lang.CharSequence getDescription() {
      return description;
    }


    /**
      * Sets the value of the 'description' field.
      * @param value The value of 'description'.
      * @return This builder.
      */
    public com.mycompany.commonskhassida.avro.KhassidaEvent.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.description = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'description' field.
      * @return This builder.
      */
    public com.mycompany.commonskhassida.avro.KhassidaEvent.Builder clearDescription() {
      description = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'periodeEcriture' field.
      * @return The value.
      */
    public java.lang.CharSequence getPeriodeEcriture() {
      return periodeEcriture;
    }


    /**
      * Sets the value of the 'periodeEcriture' field.
      * @param value The value of 'periodeEcriture'.
      * @return This builder.
      */
    public com.mycompany.commonskhassida.avro.KhassidaEvent.Builder setPeriodeEcriture(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.periodeEcriture = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'periodeEcriture' field has been set.
      * @return True if the 'periodeEcriture' field has been set, false otherwise.
      */
    public boolean hasPeriodeEcriture() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'periodeEcriture' field.
      * @return This builder.
      */
    public com.mycompany.commonskhassida.avro.KhassidaEvent.Builder clearPeriodeEcriture() {
      periodeEcriture = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'auteur' field.
      * @return The value.
      */
    public java.lang.CharSequence getAuteur() {
      return auteur;
    }


    /**
      * Sets the value of the 'auteur' field.
      * @param value The value of 'auteur'.
      * @return This builder.
      */
    public com.mycompany.commonskhassida.avro.KhassidaEvent.Builder setAuteur(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.auteur = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'auteur' field has been set.
      * @return True if the 'auteur' field has been set, false otherwise.
      */
    public boolean hasAuteur() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'auteur' field.
      * @return This builder.
      */
    public com.mycompany.commonskhassida.avro.KhassidaEvent.Builder clearAuteur() {
      auteur = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'nombreBayite' field.
      * @return The value.
      */
    public java.lang.CharSequence getNombreBayite() {
      return nombreBayite;
    }


    /**
      * Sets the value of the 'nombreBayite' field.
      * @param value The value of 'nombreBayite'.
      * @return This builder.
      */
    public com.mycompany.commonskhassida.avro.KhassidaEvent.Builder setNombreBayite(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.nombreBayite = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'nombreBayite' field has been set.
      * @return True if the 'nombreBayite' field has been set, false otherwise.
      */
    public boolean hasNombreBayite() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'nombreBayite' field.
      * @return This builder.
      */
    public com.mycompany.commonskhassida.avro.KhassidaEvent.Builder clearNombreBayite() {
      nombreBayite = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'nombreBaate' field.
      * @return The value.
      */
    public java.lang.CharSequence getNombreBaate() {
      return nombreBaate;
    }


    /**
      * Sets the value of the 'nombreBaate' field.
      * @param value The value of 'nombreBaate'.
      * @return This builder.
      */
    public com.mycompany.commonskhassida.avro.KhassidaEvent.Builder setNombreBaate(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.nombreBaate = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'nombreBaate' field has been set.
      * @return True if the 'nombreBaate' field has been set, false otherwise.
      */
    public boolean hasNombreBaate() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'nombreBaate' field.
      * @return This builder.
      */
    public com.mycompany.commonskhassida.avro.KhassidaEvent.Builder clearNombreBaate() {
      nombreBaate = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'nombreAraf' field.
      * @return The value.
      */
    public java.lang.CharSequence getNombreAraf() {
      return nombreAraf;
    }


    /**
      * Sets the value of the 'nombreAraf' field.
      * @param value The value of 'nombreAraf'.
      * @return This builder.
      */
    public com.mycompany.commonskhassida.avro.KhassidaEvent.Builder setNombreAraf(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.nombreAraf = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'nombreAraf' field has been set.
      * @return True if the 'nombreAraf' field has been set, false otherwise.
      */
    public boolean hasNombreAraf() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'nombreAraf' field.
      * @return This builder.
      */
    public com.mycompany.commonskhassida.avro.KhassidaEvent.Builder clearNombreAraf() {
      nombreAraf = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'categorie' field.
      * @return The value.
      */
    public java.lang.CharSequence getCategorie() {
      return categorie;
    }


    /**
      * Sets the value of the 'categorie' field.
      * @param value The value of 'categorie'.
      * @return This builder.
      */
    public com.mycompany.commonskhassida.avro.KhassidaEvent.Builder setCategorie(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.categorie = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'categorie' field has been set.
      * @return True if the 'categorie' field has been set, false otherwise.
      */
    public boolean hasCategorie() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'categorie' field.
      * @return This builder.
      */
    public com.mycompany.commonskhassida.avro.KhassidaEvent.Builder clearCategorie() {
      categorie = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public KhassidaEvent build() {
      try {
        KhassidaEvent record = new KhassidaEvent();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.titre = fieldSetFlags()[1] ? this.titre : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.teunk = fieldSetFlags()[2] ? this.teunk : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.description = fieldSetFlags()[3] ? this.description : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.periodeEcriture = fieldSetFlags()[4] ? this.periodeEcriture : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.auteur = fieldSetFlags()[5] ? this.auteur : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.nombreBayite = fieldSetFlags()[6] ? this.nombreBayite : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.nombreBaate = fieldSetFlags()[7] ? this.nombreBaate : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.nombreAraf = fieldSetFlags()[8] ? this.nombreAraf : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.categorie = fieldSetFlags()[9] ? this.categorie : (java.lang.CharSequence) defaultValue(fields()[9]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<KhassidaEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<KhassidaEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<KhassidaEvent>
    READER$ = (org.apache.avro.io.DatumReader<KhassidaEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.id);

    out.writeString(this.titre);

    out.writeString(this.teunk);

    out.writeString(this.description);

    if (this.periodeEcriture == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.periodeEcriture);
    }

    out.writeString(this.auteur);

    if (this.nombreBayite == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.nombreBayite);
    }

    if (this.nombreBaate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.nombreBaate);
    }

    if (this.nombreAraf == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.nombreAraf);
    }

    if (this.categorie == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.categorie);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.id = in.readString(this.id instanceof Utf8 ? (Utf8)this.id : null);

      this.titre = in.readString(this.titre instanceof Utf8 ? (Utf8)this.titre : null);

      this.teunk = in.readString(this.teunk instanceof Utf8 ? (Utf8)this.teunk : null);

      this.description = in.readString(this.description instanceof Utf8 ? (Utf8)this.description : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.periodeEcriture = null;
      } else {
        this.periodeEcriture = in.readString(this.periodeEcriture instanceof Utf8 ? (Utf8)this.periodeEcriture : null);
      }

      this.auteur = in.readString(this.auteur instanceof Utf8 ? (Utf8)this.auteur : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.nombreBayite = null;
      } else {
        this.nombreBayite = in.readString(this.nombreBayite instanceof Utf8 ? (Utf8)this.nombreBayite : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.nombreBaate = null;
      } else {
        this.nombreBaate = in.readString(this.nombreBaate instanceof Utf8 ? (Utf8)this.nombreBaate : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.nombreAraf = null;
      } else {
        this.nombreAraf = in.readString(this.nombreAraf instanceof Utf8 ? (Utf8)this.nombreAraf : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.categorie = null;
      } else {
        this.categorie = in.readString(this.categorie instanceof Utf8 ? (Utf8)this.categorie : null);
      }

    } else {
      for (int i = 0; i < 10; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.id = in.readString(this.id instanceof Utf8 ? (Utf8)this.id : null);
          break;

        case 1:
          this.titre = in.readString(this.titre instanceof Utf8 ? (Utf8)this.titre : null);
          break;

        case 2:
          this.teunk = in.readString(this.teunk instanceof Utf8 ? (Utf8)this.teunk : null);
          break;

        case 3:
          this.description = in.readString(this.description instanceof Utf8 ? (Utf8)this.description : null);
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.periodeEcriture = null;
          } else {
            this.periodeEcriture = in.readString(this.periodeEcriture instanceof Utf8 ? (Utf8)this.periodeEcriture : null);
          }
          break;

        case 5:
          this.auteur = in.readString(this.auteur instanceof Utf8 ? (Utf8)this.auteur : null);
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.nombreBayite = null;
          } else {
            this.nombreBayite = in.readString(this.nombreBayite instanceof Utf8 ? (Utf8)this.nombreBayite : null);
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.nombreBaate = null;
          } else {
            this.nombreBaate = in.readString(this.nombreBaate instanceof Utf8 ? (Utf8)this.nombreBaate : null);
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.nombreAraf = null;
          } else {
            this.nombreAraf = in.readString(this.nombreAraf instanceof Utf8 ? (Utf8)this.nombreAraf : null);
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.categorie = null;
          } else {
            this.categorie = in.readString(this.categorie instanceof Utf8 ? (Utf8)this.categorie : null);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










